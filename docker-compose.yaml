services:
  postgres:
    image: postgres:17.1
    restart: "no"
    env_file:
      - .env
    ports:
      - "${DATASOURCE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_DBNAME}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.6
    restart: "no"
    command:
      - "start-dev"
      - "--import-realm"
    ports:
      - "9080:9080"
    volumes:
      - ./keycloak/config:/opt/keycloak/data/import:ro
    environment:
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${DATASOURCE_DBNAME}
      KC_DB_USERNAME: ${DATASOURCE_USERNAME}
      KC_DB_PASSWORD: ${DATASOURCE_PASSWORD}
      KC_HEALTH_ENABLED: "true"
    healthcheck:
      test:
        [ "CMD-SHELL", "{ exec 3<>/dev/tcp/localhost/9080 && echo -e \"GET /health/ready HTTP/1.1\nhost: localhost:9080\n\" >&3 && timeout --preserve-status 1 cat <&3 | grep -m 1 -q 'status.*UP'; }" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
volumes:
  postgres_data: